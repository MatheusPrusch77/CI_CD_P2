version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: matheusprusch09/dockerpostgres:latest
    container_name: ada-company-postgres
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: 9uGrBlyB8CAOwduki4cSmfg35Cd4uPqh
      POSTGRES_DB: ada_company
      POSTGRES_USER: ada_company_user
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - ada-company-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ada_company_user"]
      timeout: 20s
      retries: 10

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ada-company-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3000
      - RENDER=false
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=ada_company_user
      - DB_PASSWORD=9uGrBlyB8CAOwduki4cSmfg35Cd4uPqh
      - DB_NAME=ada_company
      - DB_SSL=false
      - BETTERSTACK_SOURCE_TOKEN=Hguw6n1Hmo6V8cA2EVC2Fqkh
      - DOCKER_USERNAME=matheusprusch09
      - DOCKER_PASSWORD=Seunome123
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - ada-company-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local

networks:
  ada-company-network:
    driver: bridge 